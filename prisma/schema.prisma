// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    clerkId   String     @id 
    items     Item[]
    RentCards RentCard[]
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
    coins     Int
}

model Item {
    id          Int      @id @default(autoincrement())
    name        String
    description String
    ownerId     String
    owner       User     @relation(fields: [ownerId], references: [clerkId])
    images      Image[]
    RentCard    RentCard @relation(fields: [rentCardId], references: [id])
    rentCardId  Int      @unique
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model Image {
    fileKey   String   @id 
    fileUrl   String
    Item      Item     @relation(fields: [itemId], references: [id])
    itemId    Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model RentCard {
    id          Int          @id @default(autoincrement())
    proposerId  String
    proposer    User         @relation(fields: [proposerId], references: [clerkId])
    applyerId   String?
    item        Item?
    type        TransactionType
    rentingDays RentingDay[]
    rentPerDay  Int
    createdAt   DateTime     @default(now())
    updatedAt   DateTime     @updatedAt
}

model RentingDay {
    id            Int        @id @default(autoincrement())
    date          DateTime
    rentingCard   RentCard   @relation(fields: [rentingCardId], references: [id])
    rentingCardId Int        
    rentingStatus RentStatus
    createdAt     DateTime   @default(now())
    updatedAt     DateTime   @updatedAt
}

enum TransactionType {
    ASK
    OFFER
}

enum RentStatus {
    AVAILABLE
    TAKEN
}
